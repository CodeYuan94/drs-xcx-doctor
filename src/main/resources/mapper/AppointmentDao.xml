<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.df.drs.dao.AppointmentDao">
  <resultMap id="BaseResultMap" type="com.df.drs.model.entity.Appointment">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="doctor_id" jdbcType="VARCHAR" property="doctorId" />
    <result column="patient_id" jdbcType="VARCHAR" property="patientId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="start_time" jdbcType="DATE" property="startTime" />
    <result column="remind_time" jdbcType="TIME" property="remindTime" />
    <result column="end_time" jdbcType="DATE" property="endTime" />
    <result column="appointment_time" jdbcType="TIMESTAMP" property="appointmentTime" />
    <result column="full_day" jdbcType="INTEGER" property="fullDay" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="delflag" jdbcType="INTEGER" property="delflag" />
    <result column="completed" jdbcType="INTEGER" property="completed" />
    <result column="expired" jdbcType="INTEGER" property="expired" />
  </resultMap>
  <resultMap id="AppointmentNoticeDTOMap" type="com.df.drs.model.dto.notice.AppointmentNoticeDTO">
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="female_name" jdbcType="VARCHAR" property="patientName" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="appointment_time" jdbcType="TIMESTAMP" property="appointmentTime" />
    <result column="full_day" jdbcType="INTEGER" property="fullDay" />
    <result column="expired" jdbcType="INTEGER" property="expired" />
  </resultMap>
  <resultMap id="RemindNoticeDTOMap" type="com.df.drs.model.dto.notice.RemindNoticeDTO">
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="start_time" jdbcType="DATE" property="startTime" />
    <result column="end_time" jdbcType="DATE" property="endTime" />
    <result column="remind_time" jdbcType="TIME" property="remindTime" />
    <result column="expired" jdbcType="INTEGER" property="expired" />
  </resultMap>
  <resultMap id="ScheduleDTOMap" type="com.df.drs.model.dto.schedule.ScheduleDTO">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="patient_id" jdbcType="VARCHAR" property="patientId" />
    <result column="doctor_id" jdbcType="VARCHAR" property="doctorId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="start_time" jdbcType="DATE" property="startTime" />
    <result column="remind_time" jdbcType="TIME" property="remindTime" />
    <result column="end_time" jdbcType="DATE" property="endTime" />
    <result column="appointment_time" jdbcType="TIMESTAMP" property="appointmentTime" />
    <result column="full_day" jdbcType="INTEGER" property="fullDay" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="completed" jdbcType="INTEGER" property="completed" />
  </resultMap>
  <sql id="Base_Column_List">
    id, doctor_id, patient_id, `type`, start_time, remind_time, end_time, appointment_time, full_day, remarks, create_time,
    update_time, create_user, update_user, delflag, completed, expired
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from appointment
    where id = #{id,jdbcType=VARCHAR} and delflag = 0
  </select>
  <select id="selectAppointmentByDoctorId" parameterType="java.lang.String" resultMap="AppointmentNoticeDTOMap">
    SELECT
	a.type,
	p.female_name,
	a.remarks,
	a.appointment_time,
	a.expired
    FROM
	appointment a,
	patient p
    WHERE
	a.patient_id = p.id
    AND
	a.doctor_id = #{doctorId}
    AND
	a.patient_id is NOT NULL
    AND
	a.delflag = 0
  </select>
  <select id="selectRemindByDoctorId" parameterType="java.lang.String" resultMap="RemindNoticeDTOMap">
    SELECT
	type,
	remarks,
	start_time,
	end_time,
	remind_time,
	expired
    FROM
	appointment
    WHERE
	doctor_id = 1
    AND patient_id IS NULL
    AND delflag = 0
  </select>
  <select id="selectScheduleByDoctorId" resultMap="ScheduleDTOMap">
    SELECT
    id, doctor_id, patient_id, type, start_time, remind_time, end_time, appointment_time, full_day, remarks, completed
    FROM
    appointment
    WHERE
    DATE_FORMAT(
    appointment_time,
    '%Y-%m-%d'
    ) = DATE_FORMAT(#{date}, '%Y-%m-%d')
    OR (
    DATE_FORMAT(#{date}, '%Y-%m-%d') &gt;= start_time
    AND DATE_FORMAT(#{date}, '%Y-%m-%d') &lt;= end_time
    )
    AND delflag = 0
    AND doctor_id = #{doctorId}
  </select>
  <select id="selectWeekAmount" parameterType="Map" resultType="com.df.drs.model.dto.count.WeekCustomerDataDTO">
    SELECT
	DATE_FORMAT(create_time, '%Y-%m-%d') as date, count(*) as amount
    FROM
	appointment
    WHERE
	create_time BETWEEN #{startDate}
    AND #{endDate}
    AND doctor_id = #{doctorId}
    AND patient_id is not null
    AND delflag = 0
    GROUP BY
	date
  </select>
  <select id="selectWeekTotal" parameterType="Map" resultType="int">
    SELECT
    count(*) as total
    FROM
	appointment
    WHERE
	create_time BETWEEN #{startDate}
    AND #{endData}
    AND doctor_id = #{doctorId}
    AND patient_id is not null
    AND delflag = 0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from appointment
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.df.drs.model.entity.Appointment">
    insert into appointment (id,doctor_id, patient_id, `type`,
      start_time, remind_time, end_time, appointment_time, full_day,
      remarks, create_time, update_time, 
      create_user, update_user, delflag, 
      completed, expired)
    values (#{id,jdbcType=VARCHAR},#{doctorId,jdbcType=VARCHAR}, #{patientId,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
      #{startTime,jdbcType=DATE}, #{remindTime,jdbcType=TIME}, #{endTime,jdbcType=DATE}, #{appointmentTime,jdbcType=TIMESTAMP}, #{fullDay,jdbcType=INTEGER},
      #{remarks,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, 0 ,
      #{completed,jdbcType=INTEGER}, #{expired,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.df.drs.model.entity.Appointment">
    insert into appointment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="patientId != null">
        patient_id,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="remindTime != null">
        remind_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="appointmentTime != null">
        appointment_time,
      </if>
      <if test="fullDay != null">
        full_day,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="delflag != null">
        delflag,
      </if>
      <if test="completed != null">
        completed,
      </if>
      <if test="expired != null">
        expired,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=VARCHAR},
      </if>
      <if test="patientId != null">
        #{patientId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=DATE},
      </if>
      <if test="remindTime != null">
        #{remindTime,jdbcType=TIME},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=DATE},
      </if>
      <if test="appointmentTime != null">
        #{appointmentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fullDay != null">
        #{fullDay,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="delflag != null">
        #{delflag,jdbcType=INTEGER},
      </if>
      <if test="completed != null">
        #{completed,jdbcType=INTEGER},
      </if>
      <if test="expired != null">
        #{expired,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.df.drs.model.entity.Appointment">
    update appointment
    <set>
      <if test="doctorId != null">
        doctor_id = #{doctorId,jdbcType=VARCHAR},
      </if>
      <if test="patientId != null">
        patient_id = #{patientId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=DATE},
      </if>
      <if test="remindTime != null">
        remind_time = #{remindTime,jdbcType=TIME},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=DATE},
      </if>
      <if test="appointmentTime != null">
        appointment_time = #{appointmentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fullDay != null">
        full_day = #{fullDay,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="delflag != null">
        delflag = #{delflag,jdbcType=INTEGER},
      </if>
      <if test="completed != null">
        completed = #{completed,jdbcType=INTEGER},
      </if>
      <if test="expired != null">
        expired = #{expired,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.df.drs.model.entity.Appointment">
    update appointment
    set doctor_id = #{doctorId,jdbcType=VARCHAR},
      patient_id = #{patientId,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=DATE},
      remind_time = #{remindTime,jdbcType=TIME},
      end_time = #{endTime,jdbcType=DATE},
      appointment_time = #{appointmentTime,jdbcType=TIMESTAMP},
      full_day = #{fullDay,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      delflag = #{delflag,jdbcType=INTEGER},
      completed = #{completed,jdbcType=INTEGER},
      expired = #{expired,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>